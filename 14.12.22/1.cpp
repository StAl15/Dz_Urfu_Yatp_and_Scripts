#include <iostream>
#include <fstream>
#include <string>

// 1. Квадратную матрицу n*n c элементами из [1, n^2], размещённым в матрице так, что совпадают суммы элементов по строкам, по столбцам, по главной диагонали, по побочной диагонали, называют магическим квадратом. Для нечётного n можно предложить такой способ построения магического квадрата: единицу помещаем на среднее место первой строки матрицы. Если последний элемент поместили на место с номерами (i, j), то следующий (на единицу больший элемент) помещаем на место с номерами c i1=i-1, j1=j+1. Если j1>n, считаем j1=1. Если i1<1, считаем i1=n. Если на место (i1, j1) уже поместили элемент матрицы, считаем i1=i+1, j1=j. Для каждого из некоторого количества нечётных значений n получить матрицу – магический квадрат и записать все построенные матрицы в файл.



using namespace std;

void addTextInFile(string text)
{
    ofstream out("file1.txt", ios::app); // поток для записи

    if (out.is_open())
    {
        out << text;
    }
    out.close();
}

int main()
{


    
    int n;
    cin >> n;
    addTextInFile("EXAMPLE WITH "+to_string(n) + " MATRIX\n");
 
    int **matrix = new int *[n]; //сама матрица
    for (int i = 0; i < n; ++i)
    {
        matrix[i] = new int [n];
    }
 
    int n_kvadrat = n * n; //размерность
    int i = 0; //стартовая строчка
    int j = n / 2;  // стартовый столбец
 
    for (int k = 1; k <= n_kvadrat; ++k) //итерируемся по значениям [1; n*n]
    {
        matrix[i][j] = k; //присваиваем значение диапазона
        i--; // спускаемся на строчку
        j++; // идем дальше по столбцу
        if (k % n == 0)  //если значение кратно стороне
        { 
            i += 2; // поднимаем строчку на 2
            --j; //возвращаемся на предыдущий столбец
        }
        else 
        {
            if (j == n) //если значение не кратно стороне и столбец равен стороне
            {
                j -= n; //возвращаемся в начало
            }
            else if (i < 0) //если строка в начале
            {
                i += n; //строку спускаем в конец
            }
        }
        

    }
 
    //вывод
    for(int i = 0; i < n; i++)
    {
        for(int j = 0; j < n; j++)
        {
            cout << matrix[i][j] << "\t";
            addTextInFile(to_string(matrix[i][j]) + "\t");
        }
        cout << endl;
        addTextInFile("\n");
    }
    addTextInFile("\n");



    return 0;
}